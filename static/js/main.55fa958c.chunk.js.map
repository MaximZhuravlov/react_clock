{"version":3,"sources":["components/Clock/Clock.jsx","App.jsx","index.js"],"names":["Clock","state","date","Date","timer","setInterval","setState","this","prevProps","prevState","name","props","console","log","clearInterval","className","toLocaleTimeString","React","Component","App","isClockVisible","clockName","show","hide","changeName","Math","random","toString","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4NAMaA,G,MAAb,kDAKE,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,KAAM,IAAIC,MAGZ,EAAKC,MAAQC,aAAY,WACvB,EAAKC,SAAS,CACZJ,KAAM,IAAIC,SAEX,KAXS,EALhB,gEAoBI,OAAOI,KAAKH,QApBhB,yCAuBqBI,EAAWC,GACxBD,EAAUE,OAASH,KAAKI,MAAMD,MAChCE,QAAQC,IAAI,qCAA8BL,EAAUE,KAAxC,kBACJH,KAAKI,MAAMD,SA1BzB,6CA+BII,cAAcP,KAAKH,SA/BvB,+BAkCY,IACAF,EAASK,KAAKN,MAAdC,KAER,OACE,yBAAKa,UAAU,eACZb,EAAKc,qBACLJ,QAAQC,IAAIX,EAAKc,2BAxC1B,GAA2BC,IAAMC,YCyDlBC,G,kNAzDblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,S,EAGbC,KAAO,WAEL,EAAKrB,MAAMmB,gBAAkB,EAAKd,SAAS,CAAEc,gBAAgB,K,EAG/DG,KAAO,WACL,EAAKtB,MAAMmB,gBAAkB,EAAKd,SAAS,CAAEc,gBAAgB,K,EAG/DI,WAAa,WACX,EAAKlB,SAAS,CAAEe,UAAWI,KAAKC,SAASC,c,uDAGjC,IAAD,EAC+BpB,KAAKN,MAAnCmB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKN,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,gBAAd,eACCK,GAAmB,kBAAC,EAAD,CAAOV,KAAMW,IACjC,yBAAKN,UAAU,kBACb,4BACEa,KAAK,SACLb,UAAU,oCACVc,QAAStB,KAAKe,MAHhB,cAOA,4BACEM,KAAK,SACLb,UAAU,oCACVc,QAAStB,KAAKgB,MAHhB,cAOA,4BACEK,KAAK,SACLb,UAAU,mCACVc,QAAStB,KAAKiB,YAHhB,2B,GA3CIP,IAAMC,YCDxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.55fa958c.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Clock.scss';\n\nexport class Clock extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      date: new Date(),\n    };\n\n    this.timer = setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n    }, 1000);\n  }\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.name !== this.props.name) {\n      console.log(`The Clock was renamed from ${prevProps.name} `\n      + `to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"clock__info\">\n        {date.toLocaleTimeString()}\n        {console.log(date.toLocaleTimeString())}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'Clock',\n  };\n\n  show = () => {\n    // Probably it should not print the same time several times\n    this.state.isClockVisible || this.setState({ isClockVisible: true });\n  };\n\n  hide = () => {\n    this.state.isClockVisible && this.setState({ isClockVisible: false });\n  };\n\n  changeName = () => {\n    this.setState({ clockName: Math.random().toString() });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"clock\">\n            <h1 className=\"clock__title\">React clock</h1>\n            {isClockVisible && (<Clock name={clockName} />)}\n            <div className=\"clock__buttons\">\n              <button\n                type=\"button\"\n                className=\"clock__button clock__button--show\"\n                onClick={this.show}\n              >\n                Show Clock\n              </button>\n              <button\n                type=\"button\"\n                className=\"clock__button clock__button--hide\"\n                onClick={this.hide}\n              >\n                Hide Clock\n              </button>\n              <button\n                type=\"button\"\n                className=\"clock__button clock__button--set\"\n                onClick={this.changeName}\n              >\n                Set random name\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}